# -*- coding: utf-8 -*-
"""Semana-7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R9HxEsDpokYkfN3Hn91CjlrhzNJ8ZrvU
"""

!apt-get install openjdk-8-jdk-headless -qq > /dev/null

!wget -q -P . https://archive.apache.org/dist/spark/spark-3.4.3/spark-3.4.3-bin-hadoop3.tgz

!tar xf spark-3.4.3-bin-hadoop3.tgz

import os

os.environ["JAVA_HOME"] = "/usr/lib/jvm/java-8-openjdk-amd64"
os.environ["SPARK_HOME"] = "/content/spark-3.4.3-bin-hadoop3"

!pip install -q findspark

!pip install -q pyspark

import findspark

findspark.init()

from pyspark.sql import SparkSession

spark = SparkSession.builder.getOrCreate()

spark

import findspark

findspark.init()

from pyspark.sql import SparkSession

spark = SparkSession.builder.master("local[*]").appName('CERTUS Pyspark - Kevin Inofuente').getOrCreate()

spark

# Probando la sesión de Spark
df = spark.createDataFrame([("python", "spark") for _ in range(10)], ["Columna 1 Big Data", "Columna 2 Big Data"])

# Para mostrar la tabla
df.show()

# Probando la sesión de Spark
df = spark.createDataFrame([("python", "Explora Python es un Lenguaje versatil") for _ in range(10)], ["Columna 1 Big Data", "Columna 2 Big Data"])

# Para mostrar la tabla Y ELIMINAR EL ESPACIO LIMITE POR DEFECTO QUE TRAE EL DATAFRAME
df.show(truncate=False)